version: 2.1

orbs:
  android: circleci/android@2.5.0
  flutter: circleci/flutter@2.1.0
  node: circleci/node@5.2.0
  ios: circleci/macos@2.5.4
  advanced-checkout: vsco/advanced-checkout@1.1.0

executors:
  flutter-executor:
    docker:
      - image: cimg/base:stable


commands:
  setup_flutter:
    parameters:
      version:
        type: string
        default: 3.24.3
      use_melos:
        type: boolean
        default: true
      remove_patrol:
        type: boolean
        default: false
      working_dir:
        type: string
        default: "~/project"
    steps:
      - flutter/install_sdk:
          version: <<parameters.version>>
      - install_flutter_and_dart_packages:
          generate_pigeons: true
          use_melos: <<parameters.use_melos>>
          remove_patrol: <<parameters.remove_patrol>>
          working_dir: <<parameters.working_dir>>
  setup_ios:
    steps:
      # Flutter doesn't support Apple Silicon yet, so we need to install Rosetta use Flutter on M1 machines.
      - ios/install-rosetta
      - setup_flutter
      - run:
          name: Install CocoaPods
          command: sudo gem install cocoapods
      - run:
          name: Install Pods
          working_directory: packages/luciq_flutter/example/ios
          command: pod install --repo-update
  setup_patrol:
    steps:
      - run:
          name: Add pub-cache bin to PATH
          command: |
            echo 'export PATH="$PATH:$HOME/.pub-cache/bin"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install patrol
          command: dart pub global activate patrol_cli 3.5.0

  setup_captain:
    parameters:
      platform:
        type: enum
        enum:
          - ios
          - android
    steps:
      - run:
          name: Install Appium
          command: npm install -g appium@2.19.0
      - when:
          condition:
            equal:
              - <<parameters.platform>>
              - ios
          steps:
            - run:
                name: Install XCUITest Driver
                command: appium driver install xcuitest@4.35.0
      - when:
          condition:
            equal:
              - <<parameters.platform>>
              - android
          steps:
            - run:
                name: Install UIAutomator2 Driver
                command: appium driver install uiautomator2@3.1.0
      - run:
          name: Launch Appium
          # Enable --relaxed-security for `mobile: shell` command that Captain uses internally.
          command: appium --relaxed-security
          background: true
      - run:
          name: Install .NET 6
          command: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel 6.0.1xx
      - run:
          name: Add .NET to PATH
          command: |
            echo 'export DOTNET_ROOT=$HOME/.dotnet' >> $BASH_ENV
            echo 'export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools' >> $BASH_ENV
      - run:
          name: Clone Captain
          command: git clone git@github.com:Instabug/Captain.git ../Instabug.Captain
      - run:
          name: Configure Captain Platform
          command: echo 'export CAPTAIN_PLATFORM=<<parameters.platform>>' >> $BASH_ENV
  # This runs `flutter pub get` and `dart pub get` if we pass parameter `generate_pigeons` to the job it also runs the following:
  #   - `melos pigeon`
  #   - `melos generate`
  install_flutter_and_dart_packages:
    parameters:
      generate_pigeons:
        type: boolean
      remove_patrol:
        type: boolean
        default: false
      use_melos:
        type: boolean
        default: true
      working_dir:
        type: string
    steps:
      - when:
          condition:
            equal:
              - <<parameters.remove_patrol>>
              - true
          steps:
            - run:
                name: remove Patrol
                command: cd example && dart pub remove patrol
      - flutter/install_pub:
          app-dir: <<parameters.working_dir>>
      - when:
          condition:
            equal:
              - <<parameters.use_melos>>
              - true
          steps:
            - run:
                name: Install melos
                command: dart pub global activate melos &&  echo 'export PATH="$PATH:$HOME/.pub-cache/bin"' >> $BASH_ENV
            - run:
                name: Install Flutter Packages
                command: melos bootstrap
            - run:
                name: Install Dart Packages
                command: melos dart_bootstrap
                description: Install Dart Packages (for dart explicit packages)
            - when:
                condition:
                  equal:
                    - <<parameters.generate_pigeons>>
                    - true
                steps:
                  - run:
                      name: Generate Pigeons
                      command: melos pigeon --no-select
                  - run:
                      name: Build Pigeons
                      command: melos generate --no-select
      - when:
          condition:
            equal:
              - <<parameters.use_melos>>
              - false
          steps:
            - run:
                name: Install Flutter Packages
                command: flutter pub get
            - run:
                name: Install Dart Packages
                command: dart pub get
                description: Install Dart Packages (for dart explicit packages)
            - when:
                condition:
                  equal:
                    - <<parameters.generate_pigeons>>
                    - true
                steps:
                  - run:
                      name: Generate Pigeons
                      command: sh scripts/pigeon.sh
                  - run:
                      name: Build Pigeons
                      command: dart run build_runner build --delete-conflicting-outputs

jobs:
  danger:
    executor:
      name: node/default
    steps:
      - advanced-checkout/shallow-checkout
      - node/install-packages:
          pkg-manager: yarn
          override-ci-command: yarn install --frozen-lockfile --network-concurrency 1
      - attach_workspace:
          at: ~/project
      - run:
          name: Run Danger
          command: yarn danger ci

  test_flutter:
    parameters:
      version:
        type: string
        default: "3.24.3"
    executor: flutter-executor
    steps:
      - advanced-checkout/shallow-checkout
      - run: sudo apt-get update&& sudo apt-get -y install lcov
      - setup_flutter:
          version: <<parameters.version>>
          use_melos: true
      - run: melos test-coverage --no-select
      - persist_to_workspace:
          root: ~/project
          paths:
            - coverage


  test_flutter_without_melos:
    parameters:
      version:
        type: string
        default: "2.10.0"
      app-dir:
        type: string
    executor: flutter-executor
    working_directory: <<parameters.app-dir>>
    steps:
      - advanced-checkout/shallow-checkout:
          path: ~/project
      - setup_flutter:
          version: <<parameters.version>>
          use_melos: false
          remove_patrol: true
          working_dir: <<parameters.app-dir>>
      - run: flutter test

  test_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2024.01.1
    steps:
      - advanced-checkout/shallow-checkout
      - setup_flutter
      - android/run-tests:
          working-directory: packages/luciq_flutter/example/android
          test-command: ./gradlew test

  e2e_android_patrol:
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2024.01.1
    steps:
      - advanced-checkout/shallow-checkout
      - setup_flutter
      - setup_patrol
      - android/create-avd:
          avd-name: 'test'
          install: true
          system-image: system-images;android-33;default;x86_64
      - android/start-emulator:
          avd-name: 'test'
          post-emulator-launch-assemble-command: ""
      - run:
          name: Run E2E Tests
          no_output_timeout: 30m
          working_directory: packages/luciq_flutter/example
          command: patrol test -t integration_test/

  test_ios:
    macos:
      xcode: 16.0.0
    resource_class: macos.m1.medium.gen1
    environment:
      luciq_SOURCEMAPS_UPLOAD_DISABLE: true
    steps:
      - advanced-checkout/shallow-checkout
      - setup_ios
      - run:
          name: Build and run tests
          working_directory: ~/project/packages/luciq_flutter/example/ios
          command: |
            xcodebuild -allowProvisioningUpdates \
                -workspace Runner.xcworkspace \
                -scheme Runner \
                -resultBundlePath coverage/result.xcresult \
                -sdk iphonesimulator \
                -destination 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=18.0' \
                -skip-testing:RunnerUITests \
                test | xcpretty

  e2e_ios_patrol:
    macos:
      xcode: 16.0.0
    resource_class: macos.m1.medium.gen1
    steps:
      - advanced-checkout/shallow-checkout
      - setup_ios
      - setup_patrol
      - ios/preboot-simulator:
          version: "18.0"
          device: "iPhone 16 Pro"
      - ios/wait-until-simulator-booted
      - ios/wait-until-simulator-booted
      - run:
          name: sleep 10 seconds
          command: sleep 10
      - run:
          name: sleep 10 seconds
          command: sleep 10
      - run:
          name: Run E2E Tests
          no_output_timeout: 30m
          working_directory: packages/luciq_flutter/example
          command: patrol test -t integration_test/ --verbose --device "iPhone 16 Pro"
  format_flutter:
    executor: flutter-executor
    steps:
      - advanced-checkout/shallow-checkout
      - setup_flutter
      - run:
          name: Check Format
          command: melos format

  lint_flutter:
    executor: flutter-executor
    steps:
      - advanced-checkout/shallow-checkout
      - setup_flutter
      - run:
          name: Perform Static Analysis
          command: melos analyze

  verify_pub:
    executor: flutter-executor
    steps:
      - advanced-checkout/shallow-checkout
      - setup_flutter
      - run:
          name: Check Package Score
          command: melos score --no-select
      - run: melos dryPublish --no-select

  release_dio_plugin:
    macos:
      xcode: 15.2.0
    resource_class: macos.m1.medium.gen1
    working_directory: "~/project"
    steps:
      - advanced-checkout/shallow-checkout:
          path: ~/project
      # Flutter doesn't support Apple Silicon yet, so we need to install Rosetta use Flutter on M1 machines.
      - run:
          name: Install Rosetta
          command: softwareupdate --install-rosetta --agree-to-license
      - setup_flutter
      - run:
          name: Clone Escape
          command: git clone -b master2 git@github.com:Instabug/Escape.git
      - run:
          name: Build Escape
          working_directory: Escape
          command: |
            swift build -c release
            cp -f .build/release/Escape /usr/local/bin/escape
      - run:
          name: Publish Package
          working_directory: packages/luciq_dio_interceptor
          command: Escape flutter publish-dependancy


  release_http_adapter_plugin:
    macos:
      xcode: 15.2.0
    resource_class: macos.m1.medium.gen1
    working_directory: "~/project"
    steps:
      - advanced-checkout/shallow-checkout:
          path: ~/project
      # Flutter doesn't support Apple Silicon yet, so we need to install Rosetta use Flutter on M1 machines.
      - run:
          name: Install Rosetta
          command: softwareupdate --install-rosetta --agree-to-license
      - setup_flutter
      - run:
          name: Clone Escape
          command: git clone -b master2 git@github.com:Instabug/Escape.git
      - run:
          name: Build Escape
          working_directory: Escape
          command: |
            swift build -c release
            cp -f .build/release/Escape /usr/local/bin/escape
      - run:
          name: Publish Package
          working_directory: packages/luciq_http_client
          command: Escape flutter publish-dependancy

  release_modular_plugin:
    macos:
      xcode: 15.2.0
    resource_class: macos.m1.medium.gen1
    working_directory: "~/project"
    steps:
      - advanced-checkout/shallow-checkout:
          path: ~/project
      # Flutter doesn't support Apple Silicon yet, so we need to install Rosetta use Flutter on M1 machines.
      - run:
          name: Install Rosetta
          command: softwareupdate --install-rosetta --agree-to-license
      - setup_flutter
      - run:
          name: Clone Escape
          command: git clone -b master2 git@github.com:instabug/Escape.git
      - run:
          name: Build Escape
          working_directory: Escape
          command: |
            swift build -c release
            cp -f .build/release/Escape /usr/local/bin/escape
      - run:
          name: Publish Package
          working_directory: packages/luciq_flutter_modular
          command: Escape flutter publish-dependancy

  release_cli_plugin:
    macos:
      xcode: 15.2.0
    resource_class: macos.m1.medium.gen1
    working_directory: "~/project"
    steps:
      - advanced-checkout/shallow-checkout:
          path: ~/project
      # Flutter doesn't support Apple Silicon yet, so we need to install Rosetta use Flutter on M1 machines.
      - run:
          name: Install Rosetta
          command: softwareupdate --install-rosetta --agree-to-license
      - setup_flutter
      - run:
          name: Clone Escape
          command: git clone -b master2 git@github.com:instabug/Escape.git
      - run:
          name: Build Escape
          working_directory: Escape
          command: |
            swift build -c release
            cp -f .build/release/Escape /usr/local/bin/escape
      - run:
          name: Publish Package
          working_directory: packages/luciq_cli
          command: Escape flutter publish-dependancy

  release_luciq_flutter:
    macos:
      xcode: 15.2.0
    resource_class: macos.m1.medium.gen1
    working_directory: "~/project"
    steps:
      - advanced-checkout/shallow-checkout:
          path: ~/project
      # Flutter doesn't support Apple Silicon yet, so we need to install Rosetta use Flutter on M1 machines.
      - run:
          name: Install Rosetta
          command: softwareupdate --install-rosetta --agree-to-license
      - setup_flutter
      - run:
          name: Clone Escape
          command: git clone -b master2 git@github.com:Instabug/Escape.git
      - run:
          name: Build Escape
          working_directory: Escape
          command: |
            swift build -c release
            cp -f .build/release/Escape /usr/local/bin/escape
      - run:
          name: Publish Package
          working_directory: packages/luciq_flutter
          command: Escape flutter publish-monorepo-luciq

workflows:
  version: 2
  build-test-and-approval-deploy:
    jobs:
      - test_android
      - danger:
          requires:
            - test_flutter-stable
      - test_flutter:
          name: test_flutter-stable
      - test_flutter_without_melos:
          name: test_flutter-2.10.5
          version: 2.10.5
          app-dir: "~/project/packages/luciq_flutter/"
      - e2e_android_patrol
      - test_ios
      - e2e_ios_patrol
      - format_flutter
      - lint_flutter:
          requires:
            - format_flutter
      - verify_pub:
          requires:
            - lint_flutter
      - hold_release_luciq_flutter:
          type: approval
          requires:
            - danger
            - test_flutter-stable
            - test_flutter-2.10.5
            - test_android
            # TODO: Fix the flaky tests and add the following jobs to the dependencies for the release
            # The following jobs have been removed while releasing v13.2.0 to avoid delaying the release
            # as they were just flaky and the tests pass locally without issues.
            # - e2e_android_captain
            # - test_ios
            # - e2e_ios_captain
            - verify_pub
          filters:
            branches:
              only: master
      - hold_release_dio_plugin:
          type: approval
          requires:
            - test_flutter-stable
          filters:
            branches:
              only: master
      - release_dio_plugin:
          requires:
            - hold_release_dio_plugin
            - verify_pub
          filters:
            branches:
              only: master
      - hold_release_http_adapter_plugin:
          type: approval
          requires:
            - test_flutter-stable
          filters:
            branches:
              only: master
      - release_http_adapter_plugin:
          requires:
            - hold_release_http_adapter_plugin
            - verify_pub
          filters:
            branches:
              only: master
      - hold_release_cli_plugin:
          type: approval
          filters:
            branches:
              only: master
      - release_cli_plugin:
          requires:
            - hold_release_cli_plugin
          filters:
            branches:
              only: master
      - hold_release_modular_plugin:
          type: approval
          requires:
            - test_flutter-stable
          filters:
            branches:
              only: master
      - release_modular_plugin:
          requires:
            - hold_release_modular_plugin
            - verify_pub
          filters:
            branches:
              only: master
      - release_luciq_flutter:
          requires:
            - hold_release_luciq_flutter
          filters:
            branches:
              only: master
